#!/bin/sh
# PCP QA Test No. 1612
# Exercise the BPF PMDA CO-RE opensnoop module - install, remove and values.
#
# Copyright (c) 2022 Sohaib Mohamed.
#

seq=`basename $0`
echo "QA output created by $seq"

. ./common.bpf

_pmdabpf_check
_pmdabpf_require_kernel_version 5 0
_pmdabpf_require_libbpf_version 0 7

status=1       # failure is the default!
signal=$PCP_BINADM_DIR/pmsignal
$sudo rm -rf $tmp.* $seq.full

_cleanup()
{
    _pmdabpf_cleanup
}

_prepare_pmda bpf
trap "_cleanup; exit \$status" 0 1 2 3 15
_stop_auto_restart pmcd

# real QA test starts here
cat <<EOF | _pmdabpf_install
# Installed by PCP QA test $seq on `date`
[opensnoop.so]
enabled=true
EOF
_pmdabpf_wait_for_metric

# Generate system activity for the CO-RE opensnoop module
/bin/cat $seq.full > /dev/null

echo "=== report metric values for comm ==="
pminfo -dfmtT bpf.opensnoop.comm 2>&1 | tee -a $here/$seq.full \
| _value_filter_any

echo "=== report metric values for err ==="
pminfo -dfmtT bpf.opensnoop.err 2>&1 | tee -a $here/$seq.full \
| _value_filter_exact 0

echo "=== report metric values for fd ==="
pminfo -dfmtT bpf.opensnoop.fd 2>&1 | tee -a $here/$seq.full \
| _value_filter_nonzero

echo "=== report metric values for fname ==="
pminfo -dfmtT bpf.opensnoop.fname 2>&1 | tee -a $here/$seq.full \
| _value_filter_any

echo "=== report metric values for pid ==="
pminfo -dfmtT bpf.opensnoop.pid 2>&1 | tee -a $here/$seq.full \
| _value_filter_nonzero

echo "=== report metric values for uid ==="
pminfo -dfmtT bpf.opensnoop.uid 2>&1 | tee -a $here/$seq.full \
| _value_filter_any


_pmdabpf_remove

status=0
exit
