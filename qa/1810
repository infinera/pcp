#!/bin/sh
# PCP QA Test No. 1810
# Exercise the BPF PMDA CO-RE oomkill module - install, remove and values.
#
# Copyright (c) 2022 Sohaib Mohamed.
#

seq=`basename $0`
echo "QA output created by $seq"

. ./common.bpf

_pmdabpf_check
_pmdabpf_require_kernel_version 5 0
_pmdabpf_require_libbpf_version 1 0

status=1       # failure is the default!
signal=$PCP_BINADM_DIR/pmsignal
$sudo rm -rf $tmp.* $seq.full

_cleanup()
{
    _pmdabpf_cleanup
}

_prepare_pmda bpf
trap "_cleanup; exit \$status" 0 1 2 3 15
_stop_auto_restart pmcd

# real QA test starts here
cat <<EOF | _pmdabpf_install
# Installed by PCP QA test $seq on `date`
[oomkill.so]
enabled=true
EOF
_pmdabpf_wait_for_metric

# Generate system activity for the CO-RE oomkill module
$sudo systemd-run \
    --wait \
    --pipe \
    --no-ask-password \
    --uid=pcpqa --gid=pcpqa \
    -p MemoryLimit=10M \
    perl -e 'while (1) { $a .= "A" x 1024 }' >$tmp.oom.log 2>&1

echo "=== report metric values for fcomm ==="
pminfo -dfmtT bpf.oomkill.fcomm 2>&1 | tee -a $here/$seq.full \
| _value_filter_any

echo "=== report metric values for fpid ==="
pminfo -dfmtT bpf.oomkill.fpid 2>&1 | tee -a $here/$seq.full \
| _value_filter_nonzero

echo "=== report metric values for tcomm ==="
pminfo -dfmtT bpf.oomkill.tcomm 2>&1 | tee -a $here/$seq.full \
| _value_filter_exact '"perl"'

echo "=== report metric values for tpid ==="
pminfo -dfmtT bpf.oomkill.tpid 2>&1 | tee -a $here/$seq.full \
| _value_filter_nonzero

echo "=== report metric values for pages ==="
pminfo -dfmtT bpf.oomkill.pages 2>&1 | tee -a $here/$seq.full \
| _value_filter_nonzero

_pmdabpf_remove

echo >>$here/$seq.full
echo "=== oom log ===" >>$here/$seq.full
cat $tmp.oom.log >>$here/$seq.full


status=0
exit

